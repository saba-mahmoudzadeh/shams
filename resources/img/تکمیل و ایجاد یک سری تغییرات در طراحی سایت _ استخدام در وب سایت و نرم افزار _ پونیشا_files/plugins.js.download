(function ($) {

    $.fn.request = function (options) {

        var plugin = $.extend({
            element: null,
            hasFile: false,
            hasLoading: true,
            successCallback: null,
            errorCallback: null,
            alwaysCallback: null,
            type: 'GET',
            data: null
        }, options);

        var Plugin = function () {
            if (plugin.hasLoading) {
                $(this).loading({
                    show: true,
                    element: plugin.element
                });
            }

            if (plugin.hasFile) {
                this.sendWithUpload();
            } else {
                this.send();
            }
        };

        Plugin.prototype.send = function () {
            $.ajax({
                url: plugin.url,
                type: plugin.type,
                data: plugin.data,
                dataType: 'json',
                encode: true,
                success: function (data, textStatus, jqXHR) {
                    if (plugin.hasLoading) {
                        $(this).loading({
                            show: false,
                            element: plugin.element
                        });
                    }
                    return plugin.successCallback(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (plugin.hasLoading) {
                        $(this).loading({
                            show: false,
                            element: plugin.element
                        });
                    }
                    return plugin.errorCallback(xhr);
                },
                complete: function (xhr, ajaxOptions, thrownError) {
                    if(plugin.alwaysCallback != undefined) return plugin.alwaysCallback(xhr);
                }
            });
        }

        Plugin.prototype.sendWithUpload = function () {
            $.ajax({
                url: plugin.url,
                type: plugin.type,
                data: plugin.data,
                dataType: 'json',
                encode: true,
                enctype: 'multipart/form-data',
                contentType: false,
                cache: false,
                processData: false,
                success: function (data) {
                    if (plugin.hasLoading) {
                        $(this).loading({
                            show: false,
                            element: plugin.element
                        });
                    }
                    return plugin.successCallback(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (plugin.hasLoading) {
                        $(this).loading({
                            show: false,
                            element: plugin.element
                        });
                    }
                    return plugin.errorCallback(xhr);
                }
            });
        }

        return this.each(function () {
            new Plugin();
        });

    };

}(jQuery));


(function ($) {

    $.fn.loading = function (options) {

        var plugin = $.extend({
            show: null,
            element: null,
            //type: 'input'
        }, options);

        var templateInput = '<div class="loader loader--style1 input" title="0"><svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="25px" height="25px"viewBox="0 0 40 40" enable-background="new 0 0 40 40" xml:space="preserve"> <path opacity="0.2" fill="#000" d="M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634    c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z"></path><path fill="#000" d="M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0    C22.32,8.481,24.301,9.057,26.013,10.047z" transform="rotate(96.306 20 20)"></path></svg></div>';

        var template = '<div class="loader loader--style1" title="1"><svg version="1.1" id="loader-1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"width="40px" height="40px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"> <path fill="#000" d="M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z"> </path></svg></div>';

        plugin.type = plugin.element.prop("tagName").toLowerCase();

        var Plugin = function () {
            if (plugin.show) {
                this.show();
            } else {
                this.hide();
            }
        };

        Plugin.prototype.show = function () {
            if (plugin.type == 'input') {
                $(templateInput).insertAfter(plugin.element);
                plugin.element.attr("disabled", true)
            } else {
                plugin.element.append(template);
                plugin.element.addClass('loading');
                plugin.element.prop('disabled', true);
                plugin.element.attr("disabled", true)
            }
        }

        Plugin.prototype.hide = function () {
            if (plugin.type == 'input') {
                plugin.element.parent().find('.input').remove();
                plugin.element.attr("disabled", false)

            } else {
                plugin.element.find('.loader').remove();
                plugin.element.removeClass('loading');
                plugin.element.prop('disabled', false);
                plugin.element.attr("disabled", false)

            }
        }

        return this.each(function () {
            new Plugin();
        });

    };

}(jQuery));
